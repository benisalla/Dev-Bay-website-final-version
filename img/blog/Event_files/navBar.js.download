
const toggleBtn = document.querySelector(".toggle-btn");
const navContent = document.querySelector(".nav-content");

ToggleNavBar();

addEventListener('resize',ToggleNavBar);

function ToggleNavBar() {
    if (window.screen.width < 660) {
        toggleBtn.classList.add("collapsed");
        navContent.classList.add("collapsed");  
    } else {
        toggleBtn.classList.remove("collapsed");
        navContent.classList.remove("collapsed");
        toggleBtn.classList.remove("active");
        navContent.classList.remove("active");
    }
}

addEventListener('click' ,(event) => {
    if(event.target == toggleBtn || event.target === document.querySelector(".toggle-btn div")){
        toggleBtn.classList.toggle("active");
        navContent.classList.toggle("active");
    }
});

//---------------------------< fix navBar >---------------------------//
const navBarContainer = document.querySelector(".navBar-container");
const emptyPusher = document.querySelector(".empty-pusher");

window.addEventListener('scroll',()=>{
    if(window.scrollY > 90){
        navBarContainer.classList.add("fixed");
        emptyPusher.style.display = "block";
    }else{
        navBarContainer.classList.remove("fixed");
        emptyPusher.style.display = "none";
    }
});

//-----------------------------------------------------------------------------------
const elts = {
    text1: document.getElementById("text1"),
    text2: document.getElementById("text2")
};

           
const texts = [
    "success",
    "is not",
    "final",
    "failure",
    "is not",
    "fatal",
    "it is",
    "the",
    "courage",
    "to",
    "continue",
    "that",
    "counts.",
    ":)",
];

const morphTime = 1.3;
const cooldownTime = 0.27;

let textIndex = texts.length - 1;
let time = new Date();
let morph = 0;
let cooldown = cooldownTime;

elts.text1.textContent = texts[textIndex % texts.length];
elts.text2.textContent = texts[(textIndex + 1) % texts.length];

function doMorph() {
    morph -= cooldown;
    cooldown = 0;

    let fraction = morph / morphTime;

    if (fraction > 1) {
        cooldown = cooldownTime;
        fraction = 1;
    }

    setMorph(fraction);
}

function setMorph(fraction) {
    elts.text2.style.filter = `blur(${Math.min(8 / fraction - 8, 100)}px)`;
    elts.text2.style.opacity = `${Math.pow(fraction, 0.4) * 100}%`;

    fraction = 1 - fraction;
    elts.text1.style.filter = `blur(${Math.min(8 / fraction - 8, 100)}px)`;
    elts.text1.style.opacity = `${Math.pow(fraction, 0.4) * 100}%`;

    elts.text1.textContent = texts[textIndex % texts.length];
    elts.text2.textContent = texts[(textIndex + 1) % texts.length];
}

function doCooldown() {
    morph = 0;

    elts.text2.style.filter = "";
    elts.text2.style.opacity = "100%";

    elts.text1.style.filter = "";
    elts.text1.style.opacity = "0%";
}

function animate() {
    requestAnimationFrame(animate);

    let newTime = new Date();
    let shouldIncrementIndex = cooldown > 0;
    let dt = (newTime - time) / 1000;
    time = newTime;

    cooldown -= dt;

    if (cooldown <= 0) {
        if (shouldIncrementIndex) {
            textIndex++;
        }

        doMorph();
    } else {
        doCooldown();
    }
}

animate();